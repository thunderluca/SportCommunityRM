@model ReflectionIT.Mvc.Paging.IPagingList
@if (this.Model.PageCount > 1)
{
    <ul class="pagination">
        @if (this.Model.StartPageIndex > 1)
        {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(1))" aria-label="First">
                    <span aria-hidden="true">1</span>
                </a>
            </li>
        }

        @if (this.Model.PageIndex > 1)
        {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageIndex - 1))" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (int i = this.Model.StartPageIndex; i <= this.Model.StopPageIndex; i++)
        {
            <li class="@((Model.PageIndex == i) ? "active" : null)">
                @Html.ActionLink(i.ToString(), Model.Action, Model.GetRouteValueForPage(i))
            </li>
        }

        @if (this.Model.PageIndex < this.Model.PageCount)
        {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageIndex + 1))" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }

        @if (this.Model.StopPageIndex < this.Model.PageCount)
        {
            <li>
                <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageCount))" aria-label="Last">
                    <span aria-hidden="true">@this.Model.PageCount</span>
                </a>
            </li>
        }
    </ul>
}